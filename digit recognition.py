from sklearn.datasets import load_digitsfrom sklearn.svm import SVCfrom sklearn.model_selection import train_test_splitfrom sklearn.metrics import classification_reportfrom sklearn.neural_network import MLPClassifier as mlpdigits = load_digits()n_samples = len(digits.images)data = digits.images.reshape((n_samples, -1))X_train, X_test, y_train, y_test = train_test_split(    data, digits.target, test_size=0.5, shuffle=False)clf_mlp = mlp(hidden_layer_sizes=(150,90,40), max_iter=300,activation = 'relu',              solver='adam',random_state=1)clf_mlp.fit(X_train, y_train)y_pred_mlp = clf_mlp.predict(X_test)print(f"Classification report for classifier {clf_mlp}:\n"      f"{classification_report(y_test, y_pred_mlp)}\n")clf_svm = SVC(gamma=0.01)clf_svm.fit(X_train, y_train)# Predict the value of the digit on the test subsetpredicted_svm = clf_svm.predict(X_test)print(f"Classification report for classifier {clf_svm}:\n"      f"{classification_report(y_test, predicted_svm)}\n")